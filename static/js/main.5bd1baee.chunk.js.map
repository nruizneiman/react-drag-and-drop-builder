{"version":3,"sources":["logo.svg","components/Builder.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Container","styled","div","Bar","Builder","props","emailEditorRef","useRef","onDesignLoad","data","console","log","className","styles","builder","onClick","current","editor","saveDesign","design","exportHtml","html","StrictMode","ref","onLoad","addEventListener","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"iSAAe,I,2DCQTA,EAAYC,IAAOC,IAAV,kHAOTC,EAAMF,IAAOC,IAAV,8bA0EME,EAhDC,SAACC,GACf,IAAMC,EAAiBC,iBAAO,MAiBxBC,EAAe,SAACC,GACpBC,QAAQC,IAAI,eAAgBF,IAW9B,OACE,qBAAKG,UAAWC,IAAOC,QAAvB,SACA,eAACd,EAAD,WACE,eAACG,EAAD,WACE,2DAEA,wBAAQY,QAjCK,WACjBT,EAAeU,QAAQC,OAAOC,YAAW,SAACC,GACxCT,QAAQC,IAAI,aAAcQ,OA+BxB,yBACA,wBAAQJ,QA3BK,WACjBT,EAAeU,QAAQC,OAAOG,YAAW,SAACX,GACfA,EAAjBU,OAAR,IAAgBE,EAASZ,EAATY,KAChBX,QAAQC,IAAI,aAAcU,OAwBxB,4BAGF,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAaC,IAAKjB,EAAgBkB,OAnBzB,WACblB,EAAeU,QAAQC,OAAOQ,iBAC5B,eACAjB,cCtDSkB,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMf,WAAP,UACE,cAAC,EAAD,MAEFgB,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5bd1baee.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useRef } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport styles from './Builder.module.css';\r\n\r\nimport EmailEditor from 'react-email-editor';\r\nimport sample from './sample.json';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n  height: 100vh;\r\n`;\r\n\r\nconst Bar = styled.div`\r\n  flex: 1;\r\n  background-color: #61dafb;\r\n  color: #000;\r\n  padding: 10px;\r\n  display: flex;\r\n  max-height: 40px;\r\n  h1 {\r\n    flex: 1;\r\n    font-size: 16px;\r\n    text-align: left;\r\n  }\r\n  button {\r\n    flex: 1;\r\n    padding: 10px;\r\n    margin-left: 10px;\r\n    font-size: 14px;\r\n    font-weight: bold;\r\n    background-color: #000;\r\n    color: #fff;\r\n    border: 0px;\r\n    max-width: 150px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Builder = (props) => {\r\n  const emailEditorRef = useRef(null);\r\n\r\n  const saveDesign = () => {\r\n    emailEditorRef.current.editor.saveDesign((design) => {\r\n      console.log('saveDesign', design);\r\n      // alert('Design JSON has been logged in your developer console.');\r\n    });\r\n  };\r\n\r\n  const exportHtml = () => {\r\n    emailEditorRef.current.editor.exportHtml((data) => {\r\n      const { design, html } = data;\r\n      console.log('exportHtml', html);\r\n      // alert('Output HTML has been logged in your developer console.');\r\n    });\r\n  };\r\n\r\n  const onDesignLoad = (data) => {\r\n    console.log('onDesignLoad', data);\r\n  };\r\n\r\n  const onLoad = () => {\r\n    emailEditorRef.current.editor.addEventListener(\r\n      'onDesignLoad',\r\n      onDesignLoad\r\n    );\r\n    // emailEditorRef.current.editor.loadDesign(sample);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.builder}>\r\n    <Container>\r\n      <Bar>\r\n        <h1>React Email Editor (Demo)</h1>\r\n\r\n        <button onClick={saveDesign}>Save Design</button>\r\n        <button onClick={exportHtml}>Export HTML</button>\r\n      </Bar>\r\n\r\n      <React.StrictMode>\r\n        <EmailEditor ref={emailEditorRef} onLoad={onLoad} />\r\n      </React.StrictMode>\r\n    </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Builder;","import logo from './logo.svg';\nimport './App.css';\nimport Builder from './components/Builder';\n\nfunction App() {\n  return (\n    <div>\n      <Builder />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}